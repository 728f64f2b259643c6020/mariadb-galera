#!/bin/bash -ex

function write_cluster_config() {
	PEERS="$1"
	cat >/etc/mysql/conf.d/cluster.cnf <<EOF
[mysqld]
query_cache_size=8000000
query_cache_type=1
binlog_format=ROW
default-storage-engine=innodb
innodb_autoinc_lock_mode=2
innodb_flush_log_at_trx_commit=0
bind-address=0.0.0.0

# wsrep_provider_options="gcache.size=32G"
wsrep_provider=/usr/lib/galera/libgalera_smm.so
wsrep_sst_method=xtrabackup
wsrep_cluster_address="gcomm://$PEERS"
wsrep_cluster_name="${CLUSTER_NAME:-cluster}"
wsrep_sst_auth=xtrabackup:$XTRABACKUP_PASSWORD
EOF
}

if [ -z "$XTRABACKUP_PASSWORD" ]; then
	echo "XTRABACKUP_PASSWORD not set"
	exit 1
fi

if [ -z "$MYSQL_ROOT_PASSWORD" ]; then
	echo "MYSQL_ROOT_PASSWORD not set"
	exit 1
fi

export CLUSTERCHECK_PASSWORD=$(echo "$XTRABACKUP_PASSWORD" | sha256sum | awk '{print $1;}')

case "$1" in
	seed)
		write_cluster_config ""

		# bootstrapping
		if [ ! -f /var/lib/mysql/skip-cluster-bootstrapping ]; then
			echo "Bootstrapping cluster"

			cat >/tmp/bootstrap.sql <<EOF
CREATE USER 'xtrabackup'@'localhost' IDENTIFIED BY '$XTRABACKUP_PASSWORD';
GRANT RELOAD,LOCK TABLES,REPLICATION CLIENT ON *.* TO 'xtrabackup'@'localhost';
CREATE USER 'clustercheck'@'localhost' IDENTIFIED BY '$CLUSTERCHECK_PASSWORD';
GRANT PROCESS ON *.* TO 'clustercheck'@'localhost';
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%';
UPDATE mysql.user SET Password=PASSWORD('$MYSQL_ROOT_PASSWORD') WHERE User='root';
FLUSH PRIVILEGES;
SHUTDOWN;
EOF
			/usr/bin/mysqld_safe --wsrep-new-cluster --skip-networking --console --init-file=/tmp/bootstrap.sql || (rm /tmp/bootstrap.sql; false)
			rm -f /tmp/bootstrap.sql
			touch /var/lib/mysql/skip-cluster-bootstrapping
		fi

		echo "Starting seed node"
		;;
	node)
		if [ -z "$2" ]; then
			echo "Missing master node address"
			exit 1
		fi
		IPs=""
		SEP=""
		for ADDR in ${2//,/ }; do
			if expr "$ADDR" : '^[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*$' >/dev/null; then
				IPs+=$SEP$ADDR
			else
				IPs+=$SEP$(host -t A "$ADDR" | awk '{ print $4 }' | paste -sd ",")
			fi
			SEP=,
		done
		write_cluster_config "$IPs"
		echo "Starting node, connecting to $IPs"
		;;
	*)
		echo "seed|node <othernode>,..."
		exit 1
esac

# start processes
set +e -m

function shutdown () {
	echo Shutting down
	test -s /var/run/mysql/mysqld.pid && kill -TERM $(cat /var/run/mysql/mysqld.pid)
}
trap shutdown TERM INT

/bin/galera-healthcheck -password="$CLUSTERCHECK_PASSWORD" -pidfile=/var/run/galera-healthcheck.pid -user clustercheck &
/usr/sbin/mysqld --console &
wait $!
RC=$?

test -s /var/run/galera-healthcheck.pid && kill $(cat /var/run/galera-healthcheck.pid)

exit $RC